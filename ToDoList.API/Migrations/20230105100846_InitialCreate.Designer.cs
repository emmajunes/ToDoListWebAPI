// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ToDoList.API;

#nullable disable

namespace ToDoList.API.Migrations
{
    [DbContext(typeof(ToDoListContext))]
    [Migration("20230105100846_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ToDoList.API.Models.TaskDto", b =>
                {
                    b.Property<Guid>("ListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Completed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("TaskDescription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TaskPrio")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TaskTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("ToDoListDtoListId")
                        .HasColumnType("char(36)");

                    b.HasKey("ListId");

                    b.HasIndex("ToDoListDtoListId");

                    b.ToTable("TaskDto");
                });

            modelBuilder.Entity("ToDoList.API.Models.ToDoListDto", b =>
                {
                    b.Property<Guid>("ListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("ListDateTime")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ListTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TitleColor")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("ListId");

                    b.ToTable("ToDoList");
                });

            modelBuilder.Entity("ToDoList.API.Models.UserDto", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Access")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("UserId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("ToDoList.API.Models.TaskDto", b =>
                {
                    b.HasOne("ToDoList.API.Models.ToDoListDto", null)
                        .WithMany("Tasks")
                        .HasForeignKey("ToDoListDtoListId");
                });

            modelBuilder.Entity("ToDoList.API.Models.ToDoListDto", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
