// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ToDoList.API;

#nullable disable

namespace ToDoList.API.Migrations
{
    [DbContext(typeof(ToDoListContext))]
    partial class ToDoListContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ToDoList.API.Models.TaskDto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Completed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("TaskDescription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("TaskPrio")
                        .HasColumnType("int");

                    b.Property<string>("TaskTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("ToDoListDtoId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("ToDoListDtoId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("ToDoList.API.Models.ToDoListDto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("ListDateTime")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ListTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Sortby")
                        .HasColumnType("int");

                    b.Property<int>("TitleColor")
                        .HasColumnType("int");

                    b.Property<Guid>("UserDtoId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserDtoId");

                    b.ToTable("ToDoList");
                });

            modelBuilder.Entity("ToDoList.API.Models.UserDto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("Access")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("SortBy")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("ToDoList.API.Models.TaskDto", b =>
                {
                    b.HasOne("ToDoList.API.Models.ToDoListDto", null)
                        .WithMany("Tasks")
                        .HasForeignKey("ToDoListDtoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ToDoList.API.Models.ToDoListDto", b =>
                {
                    b.HasOne("ToDoList.API.Models.UserDto", null)
                        .WithMany("ToDoList")
                        .HasForeignKey("UserDtoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ToDoList.API.Models.ToDoListDto", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("ToDoList.API.Models.UserDto", b =>
                {
                    b.Navigation("ToDoList");
                });
#pragma warning restore 612, 618
        }
    }
}
